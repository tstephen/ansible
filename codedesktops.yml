---
- hosts: codedesktops,localhost
  vars:
    npm_packages:
      - create-react-app
      - gulp-cli
      - webpack-cli
    removed_packages:
      - nano
      - openjdk-11-jre-headless
    reqd_packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - git
      - jq
      - gnupg
      - lsb-release
      - maven
      - meld
      - mysql-client-core-8.0
      - net-tools
      - openjdk-8-jdk
      - pandoc
      - pgloader
      - postgresql-client
      - s3cmd
      - software-properties-common
      - texlive-extra-utils # includes pdf booklet converter
      - unzip
      - vim
      - xsltproc

    links:
      - eclipse-oxygen.desktop
      - yaoqiang.desktop
    scripts:
      - rm-bom.sh # Remove byte order mark from BPMN files that prevents deployment
      - trim.sh # Trim all trailing spaces from file
    snaps:
      - code
      - docker
      - doctl
      - go
      - helm
      - kubectl
      - terraform
    removed_snaps:
      - vscode
    yaoqiang_vsn:
      - 5.3.11

  tasks:
    - name: Check if keys exist
      stat:
        path: '/home/tstephen/.ssh/id_rsa'
      register: idrsa

    - name: Generate keys to connect to other machines
      shell: ssh-keygen -t rsa -f /home/tstephen/.ssh/id_rsa -m PEM -P ''
      when: idrsa.stat.exists is undefined or idrsa.stat.exists == False

    - name: Install packages
      become: yes
      apt:
        state: present
        name: "{{ reqd_packages }}"

    - name: Uninstall packages
      become: yes
      apt:
        name: "{{ removed_packages }}"
        state: absent

#    - name: Install the Python MySQL module
#      pip:
#        name: MySQL-python

    # Install snaps
    - name: Install snaps
      become: yes
      snap:
        name: '{{ snaps }}'
        classic: yes

    # Perform doctl post-install
    - name: Connect doctl to kubectl
      become: yes
      shell: snap connect doctl:kube-config

    # Install Azure CLI

    - name: Download and install the Microsoft signing key
      become: yes
      shell: "curl -sL https://packages.microsoft.com/keys/microsoft.asc | \
             gpg --dearmor | \
             sudo tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null"

             #- name: Add the Azure CLI software repository
            #AZ_REPO=$(lsb_release -cs)
            #echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" |
            #sudo tee /etc/apt/sources.list.d/azure-cli.list

    #sudo apt-get update
    - name: Update repository information and install the azure-cli package
      become: yes
      apt:
        name: azure-cli
        state: present 

    # Uninstall snaps
    - name: Uninstall snaps
      become: yes
      snap:
        name: '{{ removed_snaps }}'
        classic: yes
        state: absent

    # Docker post-install tasks
    - name: Ensure group "docker" exists
      group:
        name: docker
        state: present

    # Install node snap separately as it needs to specify channel
    - name: Install node snap
      become: yes
      snap:
        name: 'node'
        classic: yes
        channel: '10'

    - name: Check if GDrive exists
      stat:
        path: '/home/tstephen/GDrive'
      register: gdrive

    - name: Setup some utilities
      become: yes
      file:
        src: '/home/tstephen/GDrive/bin/{{ item }}'
        dest: '/usr/bin/{{ item }}'
        state: link
      with_items: "{{ scripts }}"
      when: gdrive.stat.exists == True

    - name: Setup desktop links
      become: yes
      file:
        src: '/home/tstephen/GDrive/config/_local_share_applications/{{ item }}'
        dest: '/usr/bin/{{ item }}'
        state: link
      with_items: "{{ links }}"
      when: gdrive.stat.exists == True

    #- name: Install Eclipse
    # unarchive:
    #   remote_src: True
    #   src: 'https://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/2019-09/R/eclipse-java-2019-09-R-linux-gtk-x86_64.tar.gz'
    #   dest: /home/tstephen/.local/share/
    #   owner: tstephen
    #   group: tstephen
    #   mode: 0774
    #   creates: /home/tstephen/.local/share/eclipse/eclipse

    # Note node 12 does not appear to be compatible with this
    - name: Install node.js global packages
      become: yes
      npm:
        name: "{{ item }}"
        global: yes
      with_items: "{{ npm_packages }}"

    - name: Check if Yaoqiang exists
      stat:
        path: '/home/tstephen/.local/share/yaoqiang-bpmn-editor-{{yaoqiang_vsn}}.jar'
      register: yaoqiang

   #- name: Install Yaoqiang
   #  get_url:
   #    url: https://sourceforge.net/projects/bpmn/files/latest/download?source=files
   #    dest: /home/tstephen/.local/share/
   #    owner: tstephen
   #    group: tstephen
   #    mode: 0666
   #  when: yaoqiang.stat.exists is undefined or yaoqiang.stat.exists == False

    - name: crontab to download db backups
      cron:
        name: "Download DB backups"
        minute: "0"
        hour: "9"
        job: "scp code.knowprocess.com:/var/backups/daily/*gz /var/backups/mysql"

